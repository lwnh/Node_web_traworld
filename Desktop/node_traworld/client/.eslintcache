[{"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/index.js":"1","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/App.js":"2","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/reportWebVitals.js":"3","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Home.js":"4","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Login.js":"5","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/About.js":"6","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Navigator.js":"7","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Signup.js":"8","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Contact.js":"9","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/ContactForm.js":"10","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Map.js":"11","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/config/key.js":"12","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Tour.js":"13","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/TourViewer.js":"14","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/UserInfo.js":"15","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Title.js":"16","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/TourCard.js":"17"},{"size":593,"mtime":1612413885182,"results":"18","hashOfConfig":"19"},{"size":1052,"mtime":1612757826389,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1612413885182,"results":"21","hashOfConfig":"19"},{"size":669,"mtime":1612426900721,"results":"22","hashOfConfig":"19"},{"size":2673,"mtime":1612857125603,"results":"23","hashOfConfig":"19"},{"size":1555,"mtime":1612583476253,"results":"24","hashOfConfig":"19"},{"size":1405,"mtime":1612758707448,"results":"25","hashOfConfig":"19"},{"size":5075,"mtime":1612854094490,"results":"26","hashOfConfig":"19"},{"size":739,"mtime":1612857633897,"results":"27","hashOfConfig":"19"},{"size":2298,"mtime":1612857401265,"results":"28","hashOfConfig":"19"},{"size":977,"mtime":1612413885180,"results":"29","hashOfConfig":"19"},{"size":73,"mtime":1612414173333,"results":"30","hashOfConfig":"19"},{"size":4427,"mtime":1612940224324,"results":"31","hashOfConfig":"19"},{"size":590,"mtime":1612932914360,"results":"32","hashOfConfig":"19"},{"size":6603,"mtime":1612930181425,"results":"33","hashOfConfig":"19"},{"size":386,"mtime":1612853587247,"results":"34","hashOfConfig":"19"},{"size":1766,"mtime":1612940337923,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1c0jc5u",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/index.js",[],["75","76"],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/App.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/reportWebVitals.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Home.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Login.js",["77"],"import React, { useState } from 'react'\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\nimport { TextField } from \"@material-ui/core\"\nimport axios from 'axios';\nimport Title from './Title';\n\nconst LoginBlock = styled.div`\n    display: flex;\n    margin: 0 auto;\n    width: 70%;\n    align-items: center;\n    justify-content: center;\n    background: #e9ecef;\n`;\n\nconst LoginContent = styled.div`\n    margin-top: 3rem;\n    padding: 14rem 10rem;\n    text-align: center;\n    .btn-secondary {\n        margin-top: 2rem;\n        width: 100%\n    }\n    .btn-dark {\n        margin-top: 1rem;\n        width: 100%\n    }\n`;\n\nfunction Login({ history }) {\n    const [inputs, setInputs] = useState({\n        userid: '',\n        userpw: '',\n    });\n\n    const { userid, userpw } = inputs;\n\n    const onChange = (e) => {\n        const { value, name } = e.target;\n        setInputs({\n            ...inputs,\n            [name]: value\n        });\n    };\n\n    const loginSubmit = async (e) => {\n        e.preventDefault();\n        const data = inputs;\n        try {\n            await axios.post('/api/login', data)\n                .then((response) => {\n                    switch (response.data.success) {\n                        case 200:   //success\n                            sessionStorage.setItem('user', response.data.userid)\n                            // history.push('/');\n                            window.location.replace('/');\n                            break;\n                        case 201:   //fail\n                            alert('아이디와 비밀번호를 확인해주세요.')\n                            setInputs({ ...inputs, userpw: '' })\n                            break;\n                        case 100:   // server error\n                            break;\n                    }\n                })\n        } catch (error) {\n            console.log(error);\n            alert('로그인에 실패했습니다.');\n        }\n    }\n\n    return (\n        <LoginBlock>\n            <LoginContent>\n                <Title>Login</Title>\n                <form onSubmit={loginSubmit}>\n                    <TextField type=\"text\" name=\"userid\" label=\"ID\" required fullWidth margin=\"normal\" onChange={onChange} value={userid} />\n                    <TextField type=\"password\" name=\"userpw\" label=\"PASSWORD\" required fullWidth margin=\"normal\" onChange={onChange} value={userpw} />\n                    <Button type=\"submit\" variant=\"secondary\">LOGIN</Button><br />\n                    <Button variant=\"dark\" href=\"./signup\">SIGN UP</Button>\n                </form>\n            </LoginContent>\n        </LoginBlock>\n    )\n}\n\nexport default Login\n","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/About.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Navigator.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Signup.js",["78","79"],"import React, { useState } from 'react'\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\nimport { TextField } from \"@material-ui/core\"\nimport axios from 'axios';\nimport Title from './Title';\n\nconst SignupBlock = styled.div`\n    display: flex;\n    margin: 0 auto;\n    width: 70%;\n    align-items: center;\n    justify-content: center;\n    background: #e9ecef;\n`;\n\nconst SignupContent = styled.div`\n    margin-top: 5rem;\n    padding: 5rem 10rem;\n    text-align: center;\n    .btn-secondary {\n        margin-top: 1rem;\n        width: 100%\n    }\n    .btn-dark {\n        margin-top: 1rem;\n        width: 100%\n    }\n`;\n\nfunction Signup({ history }) {\n    const [inputs, setInputs] = useState({\n        name: {\n            value: '',\n            error: false,\n        },\n        userid: {\n            value: '',\n            error: false,\n        },\n        userpw: {\n            value: '',\n            error: false,\n        },\n        pwcheck: {\n            value: '',\n            error: false,\n        },\n        email: {\n            value: '',\n            error: false,\n        },\n    });\n\n    const { name, userid, userpw, pwcheck, email } = inputs;\n\n    const onChange = (e) => {\n        const { value, name } = e.target;\n        setInputs({\n            ...inputs,\n            [name]: {\n                value,\n                error: !isValidate(name, value),\n            }\n        });\n    };\n\n    const isValidate = (name, value) => {\n        let nameReg = /^[가-힝]{2,}$/;\n        let idReg = /^[a-zA-Z0-9]{4,12}$/;\n        let pwReg = /^[a-zA-z0-9]{4,12}$/;\n        let emailReg = /^[A-Za-z0-9_]+[A-Za-z0-9]*[@]{1}[A-Za-z0-9]+[A-Za-z0-9]*[.]{1}[A-Za-z]{1,3}$/;\n\n        switch (name) {\n            case \"name\":\n                return value.match(nameReg) ? true : false;\n            case \"userid\":\n                return value.match(idReg) ? true : false;\n            case \"userpw\":\n                return value.match(pwReg) ? true : false;\n            case \"pwcheck\":\n                return inputs.userpw.value === value ? true : false;\n            case \"email\":\n                return value.match(emailReg) ? true : false;\n        }\n    }\n\n    const signupSubmit = async (e) => {\n        e.preventDefault();\n        const data = inputs;\n        try {\n            await axios.post('/api/signup', data)\n                .then((response) => {\n                    switch (response.data.success) {\n                        case 200:   //success\n                            alert('회원가입이 완료되었습니다.')\n                            history.push('/login');\n                            break;\n                        case 201:   //fail\n                            alert('회원가입에 실패했습니다. 다시 시도해주세요')\n                            setInputs({ ...inputs, userpw: '' })\n                            break;\n                        case 100:   // server error\n                            break;\n                    }\n                })\n        } catch (error) {\n            console.log(error);\n            alert('회원가입에 실패했습니다.');\n        }\n    }\n\n    const goBack = () => {\n        history.goBack();\n    }\n\n    return (\n        <SignupBlock>\n            <SignupContent>\n                <Title>Sign Up</Title>\n                <form onSubmit={signupSubmit}>\n                    <TextField type=\"text\" name=\"name\" value={name.value} label=\"이름(Name)\" onChange={onChange} variant=\"outlined\" required fullWidth margin=\"normal\" error={name.error} helperText={name.error && \"이름을 확인하세요.(한글 2글자 이상)\"} />\n                    <TextField type=\"text\" name=\"userid\" value={userid.value} label=\"아이디(ID)\" onChange={onChange} variant=\"outlined\" required fullWidth margin=\"normal\" error={userid.error} helperText={userid.error && \"아이디를 확인하세요.(영문자 혹은 숫자 4~12자 이내)\"} />\n                    <TextField type=\"password\" name=\"userpw\" value={userpw.value} label=\"비밀번호(Password)\" onChange={onChange} variant=\"outlined\" required fullWidth margin=\"normal\" error={userpw.error} helperText={userpw.error && \"비밀번호를 확인하세요.(영문자 혹은 숫자 4~12자 이내)\"} />\n                    <TextField type=\"password\" name=\"pwcheck\" value={pwcheck.value} label=\"비밀번호 확인(Password Check)\" onChange={onChange} variant=\"outlined\" required fullWidth margin=\"normal\" error={pwcheck.error} helperText={pwcheck.error && \"비밀번호가 일치하지 않습니다.\"} />\n                    <TextField type=\"email\" name=\"email\" value={email.value} label=\"이메일(Email)\" onChange={onChange} variant=\"outlined\" required fullWidth margin=\"normal\" error={email.error} helperText={email.error && \"이메일 형식을 확인해주세요.\"} />\n                    <Button type=\"submit\" variant=\"dark\">SUBMIT</Button><br />\n                    <Button variant=\"secondary\" onClick={goBack}>CANCEL</Button><br />\n                </form>\n            </SignupContent>\n        </SignupBlock>\n    )\n}\n\nexport default Signup\n","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Contact.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/ContactForm.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Map.js",["80"],"import React from 'react';\nimport styled from \"styled-components\";\n\n/*global kakao*/ \n\nconst Maps = styled.div`\n    width: 500px;\n    height: 600px;\n`;\n\nconst config = require('../config/key');\nconst mapKey = config.kakaoMapKey;\n\nclass Map extends React.Component{\n    componentDidMount() {\n        const script = document.createElement(\"script\");\n        script.async = true;\n        script.src =\n          `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${mapKey}&autoload=false`;\n        document.head.appendChild(script);\n\n      script.onload = () => {\n        kakao.maps.load(() => {\n          let container = document.getElementById(\"map\");\n          let options = {\n                center: new kakao.maps.LatLng(37.506502, 127.053617),\n                level: 7\n          };\n  \n          const map = new kakao.maps.Map(container, options);\n       \n        });\n      };\n    }\n    render(){\n        return(\n            <Maps id=\"map\" />\n        )\n    }\n}\n\nexport default Map;","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/config/key.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Tour.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/TourViewer.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/UserInfo.js",["81","82","83","84","85"],"import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport { Button } from 'react-bootstrap';\nimport { TextField } from \"@material-ui/core\"\nimport axios from 'axios';\nimport Title from './Title';\n\nconst InfoBlock = styled.div`\n    display: flex;\n    margin: 0 auto;\n    width: 70%;\n    align-items: center;\n    justify-content: center;\n    background: #e9ecef;\n`;\n\nconst InfoContent = styled.div`\n    margin-top: 5rem;\n    padding: 7rem 10rem;\n    text-align: center;\n    .btn-secondary {\n        margin-top: 1rem;\n        width: 100%\n    }\n    .btn-dark {\n        margin-top: 1rem;\n        width: 100%\n    }\n`;\n\nfunction UserInfo() {\n    const sessionId = { userid: sessionStorage.getItem('user') }\n    const [userInfo, setUserInfo] = useState({\n        name: {\n            value: '',\n            error: false,\n        },\n        userid: {\n            value: '',\n            error: false,\n        },\n        userpw: {\n            value: '',\n            error: false,\n        },\n        email: {\n            value: '',\n            error: false,\n        },\n    });\n\n    const { name, userid, userpw, email } = userInfo;\n\n    useEffect(() => {\n        if (!sessionId.userid) {\n            alert('비정상 접근입니다.');\n            window.location.replace('/');\n        } else {\n            infoHandler();\n        }\n    }, [])\n\n    const infoHandler = async () => {\n        try {\n            await axios.post('/api/userinfo', sessionId)\n                .then((response) => {\n                    switch (response.data.success) {\n                        case 200:   //success\n                            const result = response.data.result[0];\n                            setUserInfo({\n                                ...userInfo,\n                                name: { value: result.name },\n                                userid: { value: result.userid },\n                                email: { value: result.email },\n                            })\n                            break;\n                        case 201:   //fail\n                            alert('정보확인에 실패했습니다. 다시 시도해주세요.')\n                            break;\n                        case 100:   // server error\n                            alert('네트워크를 확인해주세요.')\n                            break;\n                    }\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const onChange = (e) => {\n        const { value, name } = e.target;\n        setUserInfo({\n            ...userInfo,\n            [name]: {\n                value,\n                error: !isValidate(name, value),\n            }\n        });\n    };\n\n    const isValidate = (name, value) => {\n        let nameReg = /^[가-힝]{2,}$/;\n        let pwReg = /^[a-zA-z0-9]{4,12}$/;\n        let emailReg = /^[A-Za-z0-9_]+[A-Za-z0-9]*[@]{1}[A-Za-z0-9]+[A-Za-z0-9]*[.]{1}[A-Za-z]{1,3}$/;\n\n        switch (name) {\n            case \"name\":\n                return value.match(nameReg) ? true : false;\n            case \"userpw\":\n                return value.match(pwReg) ? true : false;\n            case \"email\":\n                return value.match(emailReg) ? true : false;\n        }\n    }\n\n    const updateHandler = async (e) => {\n        e.preventDefault();\n        const data = userInfo;\n        try {\n            await axios.post('/api/update', data)\n                .then((response) => {\n                    switch (response.data.success) {\n                        case 200:   //success\n                            alert('정보수정이 완료되었습니다.')\n                            window.location.reload();\n                            break;\n                        case 201:   //fail\n                            alert('정보수정에 실패했습니다. 다시 시도해주세요.')\n                            break;\n                        case 100:   // server error\n                            alert('네트워크를 확인해주세요.')\n                            break;\n                    }\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const deleteHandler = async (e) => {\n        e.preventDefault();\n        sessionStorage.removeItem('user');\n\n        const data = userInfo;\n        try {\n            await axios.post('/api/delete', data)\n                .then((response) => {\n                    switch (response.data.success) {\n                        case 200:   //success\n                            alert('회원탈퇴가 완료되었습니다.')\n                            window.location.replace('/');\n                            break;\n                        case 201:   //fail\n                            alert('회원탈퇴에 실패했습니다. 다시 시도해주세요.')\n                            break;\n                        case 100:   // server error\n                            alert('네트워크를 확인해주세요.')\n                            break;\n                    }\n                })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <InfoBlock>\n            <InfoContent>\n                <Title>Information</Title>\n                <form onSubmit={updateHandler}>\n                    <TextField type=\"text\" name=\"name\" value={name.value} label=\"이름(Name)\" onChange={onChange} variant=\"outlined\" required fullWidth margin=\"normal\" error={name.error} helperText={name.error && \"이름을 확인하세요.(한글 2글자 이상)\"} />\n                    <TextField type=\"text\" name=\"userid\" value={userid.value} label=\"아이디(ID)\" variant=\"outlined\" required fullWidth margin=\"normal\" disabled />\n                    <TextField type=\"password\" name=\"userpw\" value={userpw.value} label=\"비밀번호(Password)\" onChange={onChange} variant=\"outlined\" required fullWidth margin=\"normal\" error={userpw.error} helperText={userpw.error && \"비밀번호를 확인하세요.(영문자 혹은 숫자 4~12자 이내)\"} />\n                    <TextField type=\"email\" name=\"email\" value={email.value} label=\"이메일(Email)\" onChange={onChange} variant=\"outlined\" required fullWidth margin=\"normal\" error={email.error} helperText={email.error && \"이메일 형식을 확인해주세요.\"} />\n                    <Button type=\"submit\" variant=\"dark\">수정하기</Button><br />\n                </form>\n                <Button variant=\"secondary\" onClick={deleteHandler}>회원탈퇴</Button><br />\n            </InfoContent>\n        </InfoBlock>\n    )\n}\n\nexport default UserInfo\n","/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/Title.js",[],"/Users/yumi/Desktop/node_project/Desktop/node_traworld/client/src/components/TourCard.js",["86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":53,"column":21,"nodeType":"94","messageId":"95","endLine":65,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":74,"column":9,"nodeType":"94","messageId":"95","endLine":85,"endColumn":10},{"ruleId":"92","severity":1,"message":"93","line":94,"column":21,"nodeType":"94","messageId":"95","endLine":105,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":30,"column":17,"nodeType":"98","messageId":"99","endLine":30,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":61,"column":8,"nodeType":"102","endLine":61,"endColumn":10,"suggestions":"103"},{"ruleId":"92","severity":1,"message":"93","line":67,"column":21,"nodeType":"94","messageId":"95","endLine":83,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":106,"column":9,"nodeType":"94","messageId":"95","endLine":113,"endColumn":10},{"ruleId":"92","severity":1,"message":"93","line":122,"column":21,"nodeType":"94","messageId":"95","endLine":133,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":148,"column":21,"nodeType":"94","messageId":"95","endLine":159,"endColumn":22},{"ruleId":"96","severity":1,"message":"104","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":19},{"ruleId":"96","severity":1,"message":"105","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":14},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'infoHandler' and 'sessionId.userid'. Either include them or remove the dependency array.","ArrayExpression",["108"],"'CardActions' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [infoHandler, sessionId.userid]",{"range":"111","text":"112"},[1350,1352],"[infoHandler, sessionId.userid]"]